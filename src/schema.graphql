type Query {
  feed: [Post!]!
  drafts: [Post!]!
  post(id: ID!): Post
  profile: Profile
  me: User
}

type Mutation {
  signup(email: String!, password: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createExpense(
    type: String!
    description: String!
    date: String!
    amount: Float!
  ): Expense!
  createDraft(title: String!, content: String!): Post!
  createProfile(
    accountName: String!
    accountBalance: String!
    monthlyBudget: String!
  ): Profile!
  publish(id: ID!): Post!
  deletePost(id: ID!): Post!
}

type Subscription {
  feedSubscription: Post
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  posts: [Post!]!
  expenses: [Expense!]!
}

type Post {
  id: ID!
  published: Boolean!
  title: String!
  content: String!
  author: User!
}

type Expense {
  id: ID!
  type: String!
  description: String!
  date: String!
  amount: Float!
  createdBy: User!
}

type Profile {
  id: ID!
  isCompleted: Boolean!
  accountName: String!
  accountBalance: String!
  monthlyBudget: String!
  createdBy: User!
}
